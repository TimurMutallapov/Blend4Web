{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedImage: null,\n      images: [],\n      samplingSteps: 50,\n      // Начальное значение для Sampling Steps\n      cfgScale: 10,\n      // Начальное значение для CFG Scale\n      denoisingStrength: 0.30 // Начальное значение для Denoising Strength\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result;\n          this.images = []; // Очистка при выборе нового файла\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    applyChanges() {\n      if (!this.selectedImage) {\n        console.error('Изображение не выбрано');\n        return;\n      }\n      const param2Value = this.sliders[1].toString();\n      const param3Value = this.sliders[2].toString();\n      const param4Value = this.sliders[3].toString();\n      const base64Image = this.selectedImage.split(',')[1];\n      axios.post('http://127.0.0.1:5000/api/custom_task', {\n        param1: base64Image,\n        param2: param2Value,\n        param3: param3Value,\n        param4: param4Value\n        // sliders: this.sliders // Отправляем значения слайдеров на сервер\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data.images && response.data.images.length > 0) {\n          this.images = response.data.images.map(img => `data:image/png;base64,${img}`);\n        } else {\n          console.error('Ответ сервера не содержит изображения');\n        }\n      }).catch(error => {\n        console.error('Ошибка при запросе к серверу:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedImage","images","samplingSteps","cfgScale","denoisingStrength","methods","handleFileUpload","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","applyChanges","console","error","param2Value","sliders","toString","param3Value","param4Value","base64Image","split","post","param1","param2","param3","param4","headers","then","response","length","map","img","catch"],"sources":["C:\\Users\\golov\\OneDrive\\Рабочий стол\\projectTest\\blend4web_test\\src\\App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <v-file-input label=\"Выбрать файл\" @change=\"handleFileUpload\" class=\"file-input\"></v-file-input>\n      \n      <!-- Отображение изначально выбранного изображения -->\n      <v-img v-if=\"selectedImage\" :src=\"selectedImage\" width=\"300\" height=\"200\" class=\"uploaded-image\"></v-img>\n      \n      <!-- Отображение всех полученных изображений -->\n      <div v-for=\"(image, index) in images\" :key=\"'received-' + index\">\n        <v-img :src=\"image\" width=\"300\" height=\"200\" class=\"uploaded-image\"></v-img>\n      </div>\n\n      <!-- Слайдер для Sampling Steps -->\n      <v-slider v-model=\"samplingSteps\" :label=\"`Sampling Steps: ${samplingSteps}`\" min=\"1\" max=\"100\" step=\"1\" thumb-label=\"always\" class=\"my-5\"></v-slider>\n      \n      <!-- Слайдер для CFG Scale -->\n      <v-slider v-model=\"cfgScale\" :label=\"`CFG Scale: ${cfgScale}`\" min=\"1\" max=\"30\" step=\"1\" thumb-label=\"always\" class=\"my-5\"></v-slider>\n      \n      <!-- Слайдер для Denoising Strength -->\n      <v-slider v-model=\"denoisingStrength\" :label=\"`Denoising Strength: ${denoisingStrength}`\" min=\"0\" max=\"1\" step=\"0.01\" thumb-label=\"always\" class=\"my-5\"></v-slider>\n      \n      \n      <v-btn color=\"primary\" @click=\"applyChanges\" class=\"apply-button\">Применить</v-btn>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedImage: null,\n      images: [],\n      samplingSteps: 50, // Начальное значение для Sampling Steps\n      cfgScale: 10, // Начальное значение для CFG Scale\n      denoisingStrength: 0.30, // Начальное значение для Denoising Strength\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result;\n          this.images = []; // Очистка при выборе нового файла\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    applyChanges() {\n      if (!this.selectedImage) {\n        console.error('Изображение не выбрано');\n        return;\n      }\n\n      const param2Value = this.sliders[1].toString();\n      const param3Value = this.sliders[2].toString();\n      const param4Value = this.sliders[3].toString();\n\n      const base64Image = this.selectedImage.split(',')[1];\n\n      axios.post('http://127.0.0.1:5000/api/custom_task', {\n        param1: base64Image,\n        param2: param2Value,\n        param3: param3Value,\n        param4: param4Value,\n       // sliders: this.sliders // Отправляем значения слайдеров на сервер\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        if (response.data.images && response.data.images.length > 0) {\n          this.images = response.data.images.map(img => `data:image/png;base64,${img}`);\n        } else {\n          console.error('Ответ сервера не содержит изображения');\n        }\n      })\n      .catch(error => {\n        console.error('Ошибка при запросе к серверу:', error);\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.file-input, .my-5 {\n  margin-bottom: 20px;\n}\n\n.uploaded-image {\n  margin-top: 20px;\n}\n\n.apply-button {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,EAAE;MAAE;MACnBC,QAAQ,EAAE,EAAE;MAAE;MACdC,iBAAiB,EAAE,IAAI,CAAE;IAC3B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;UACpB,IAAI,CAACb,aAAY,GAAIW,MAAM,CAACG,MAAM;UAClC,IAAI,CAACb,MAAK,GAAI,EAAE,EAAE;QACpB,CAAC;QACDU,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;MAC5B;IACF,CAAC;IACDQ,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAAChB,aAAa,EAAE;QACvBiB,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACvC;MACF;MAEA,MAAMC,WAAU,GAAI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC9C,MAAMC,WAAU,GAAI,IAAI,CAACF,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC9C,MAAME,WAAU,GAAI,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAE9C,MAAMG,WAAU,GAAI,IAAI,CAACxB,aAAa,CAACyB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEpD3B,KAAK,CAAC4B,IAAI,CAAC,uCAAuC,EAAE;QAClDC,MAAM,EAAEH,WAAW;QACnBI,MAAM,EAAET,WAAW;QACnBU,MAAM,EAAEP,WAAW;QACnBQ,MAAM,EAAEP;QACT;MACD,CAAC,EAAE;QACDQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAAClC,IAAI,CAACE,MAAK,IAAKgC,QAAQ,CAAClC,IAAI,CAACE,MAAM,CAACiC,MAAK,GAAI,CAAC,EAAE;UAC3D,IAAI,CAACjC,MAAK,GAAIgC,QAAQ,CAAClC,IAAI,CAACE,MAAM,CAACkC,GAAG,CAACC,GAAE,IAAM,yBAAwBA,GAAI,EAAC,CAAC;QAC/E,OAAO;UACLnB,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAC;QACxD;MACF,CAAC,EACAmB,KAAK,CAACnB,KAAI,IAAK;QACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}