{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, {\n      fluid: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_file_input, {\n        label: \"Выбрать файл\",\n        onChange: $options.handleFileUpload,\n        class: \"file-input\"\n      }, null, 8 /* PROPS */, [\"onChange\"]), _createCommentVNode(\" Отображение всех полученных изображений \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: index\n        }, [_createVNode(_component_v_img, {\n          src: image,\n          width: \"300\",\n          height: \"200\",\n          class: \"uploaded-image\"\n        }, null, 8 /* PROPS */, [\"src\"])]);\n      }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n        color: \"primary\",\n        onClick: $options.applyChanges,\n        class: \"apply-button\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Применить\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_container","fluid","_component_v_file_input","label","onChange","$options","handleFileUpload","class","_createCommentVNode","_createElementBlock","_Fragment","_renderList","$data","images","image","index","key","_component_v_img","src","width","height","_component_v_btn","color","onClick","applyChanges","_createTextVNode","_"],"sources":["C:\\Users\\golov\\OneDrive\\Рабочий стол\\projectTest\\blend4web_test\\src\\App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <v-file-input label=\"Выбрать файл\" @change=\"handleFileUpload\" class=\"file-input\"></v-file-input>\n      <!-- Отображение всех полученных изображений -->\n      <div v-for=\"(image, index) in images\" :key=\"index\">\n        <v-img :src=\"image\" width=\"300\" height=\"200\" class=\"uploaded-image\"></v-img>\n      </div>\n      <v-btn color=\"primary\" @click=\"applyChanges\" class=\"apply-button\">Применить</v-btn>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedImage: null, // Изначально выбранное изображение\n      images: [] // Массив для хранения изображений полученных от сервера\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result; // Сохраняем base64 выбранного изображения\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    applyChanges() {\n      if (!this.selectedImage) {\n        console.error('Изображение не выбрано');\n        return;\n      }\n\n      const base64Image = this.selectedImage.split(',')[1]; // Получаем чистый base64 код изображения\n\n      axios.post('http://127.0.0.1:5000/api/custom_task', {\n        param1: base64Image,\n        param2: '123'\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        if (response.data.images && response.data.images.length > 0) {\n          // Обновляем массив images, добавляя префикс 'data:image/png;base64,' ко всем изображениям\n          this.images = response.data.images.map(img => `data:image/png;base64,${img}`);\n        } else {\n          console.error('Ответ сервера не содержит изображения');\n        }\n      })\n      .catch(error => {\n        console.error('Ошибка при запросе к серверу:', error);\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.file-input {\n  margin-bottom: 20px;\n}\n\n.uploaded-image {\n  margin-top: 20px;\n}\n\n.apply-button {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";;;;;;;uBACEA,YAAA,CASQC,gBAAA;IAVVC,OAAA,EAAAC,QAAA,CAEI,MAOc,CAPdC,YAAA,CAOcC,sBAAA;MAPDC,KAAK,EAAL;IAAK;MAFtBJ,OAAA,EAAAC,QAAA,CAGM,MAAgG,CAAhGC,YAAA,CAAgGG,uBAAA;QAAlFC,KAAK,EAAC,cAAc;QAAEC,QAAM,EAAEC,QAAA,CAAAC,gBAAgB;QAAEC,KAAK,EAAC;6CACpEC,mBAAA,6CAAgD,G,kBAChDC,mBAAA,CAEMC,SAAA,QAPZC,WAAA,CAKoCC,KAAA,CAAAC,MAAM,EAL1C,CAKmBC,KAAK,EAAEC,KAAK;6BAAzBN,mBAAA,CAEM;UAFiCO,GAAG,EAAED;QAAK,IAC/ChB,YAAA,CAA4EkB,gBAAA;UAApEC,GAAG,EAAEJ,KAAK;UAAEK,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC,KAAK;UAACb,KAAK,EAAC;;sCAErDR,YAAA,CAAmFsB,gBAAA;QAA5EC,KAAK,EAAC,SAAS;QAAEC,OAAK,EAAElB,QAAA,CAAAmB,YAAY;QAAEjB,KAAK,EAAC;;QARzDV,OAAA,EAAAC,QAAA,CAQwE,MAAS,CARjF2B,gBAAA,CAQwE,WAAS,E;QARjFC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}