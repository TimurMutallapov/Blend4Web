{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, {\n      fluid: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_file_input, {\n        label: \"Выбрать файл\",\n        onChange: $options.handleFileUpload,\n        class: \"file-input\"\n      }, null, 8 /* PROPS */, [\"onChange\"]), $data.selectedImage ? (_openBlock(), _createBlock(_component_v_img, {\n        key: 0,\n        src: $data.selectedImage,\n        width: \"300\",\n        height: \"200\",\n        class: \"uploaded-image\"\n      }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n        color: \"primary\",\n        onClick: $options.applyChanges,\n        class: \"apply-button\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Применить\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_container","fluid","_component_v_file_input","label","onChange","$options","handleFileUpload","class","$data","selectedImage","_component_v_img","key","src","width","height","_createCommentVNode","_component_v_btn","color","onClick","applyChanges","_createTextVNode","_"],"sources":["C:\\Users\\golov\\OneDrive\\Рабочий стол\\projectTest\\blend4web_test\\src\\App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <v-file-input label=\"Выбрать файл\" @change=\"handleFileUpload\" class=\"file-input\"></v-file-input>\n      <v-img v-if=\"selectedImage\" :src=\"selectedImage\" width=\"300\" height=\"200\" class=\"uploaded-image\"></v-img>\n      <v-btn color=\"primary\" @click=\"applyChanges\" class=\"apply-button\">Применить</v-btn>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedImage: null\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    applyChanges() {\n  if (!this.selectedImage) {\n    console.error('Изображение не выбрано');\n    return;\n  }\n\n  // Конвертирование изображения в base64\n  const base64Image = this.selectedImage.split(',')[1];\n\n  // POST-запрос на сервер с изображением в теле запроса\n  axios.post('http://127.0.0.1:5000/api/custom_task', {\n    param1: base64Image,\n    param2: '123'\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  .then(response => {\n    console.log('Полный ответ от сервера:', response);\n\n    console.log('Успешный ответ от сервера:', response.data);\n    // Предполагается, что сервер возвращает изображение в формате base64 в поле 'image'\n    // Обновляем selectedImage, чтобы отобразить новое изображение\n    // Проверяем наличие поля 'image' в ответе сервера\n    if (response.data.image) {\n      // Если сервер возвращает изображение в формате base64, добавляем префикс для отображения\n      this.selectedImage = `data:image/png;base64,${response.data.image}`;\n    } else {\n      console.error('Ответ сервера не содержит изображение');\n    }\n  })\n  .catch(error => {\n    console.error('Ошибка при запросе к серверу:', error);\n  });\n}\n  }\n};\n</script>\n\n<style>\n.file-input {\n  margin-bottom: 20px;\n}\n\n.uploaded-image {\n  margin-top: 20px;\n}\n\n.apply-button {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";;;;;;;uBACEA,YAAA,CAMQC,gBAAA;IAPVC,OAAA,EAAAC,QAAA,CAEI,MAIc,CAJdC,YAAA,CAIcC,sBAAA;MAJDC,KAAK,EAAL;IAAK;MAFtBJ,OAAA,EAAAC,QAAA,CAGM,MAAgG,CAAhGC,YAAA,CAAgGG,uBAAA;QAAlFC,KAAK,EAAC,cAAc;QAAEC,QAAM,EAAEC,QAAA,CAAAC,gBAAgB;QAAEC,KAAK,EAAC;6CACvDC,KAAA,CAAAC,aAAa,I,cAA1Bd,YAAA,CAAyGe,gBAAA;QAJ/GC,GAAA;QAImCC,GAAG,EAAEJ,KAAA,CAAAC,aAAa;QAAEI,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACP,KAAK,EAAC;0CAJtFQ,mBAAA,gBAKMhB,YAAA,CAAmFiB,gBAAA;QAA5EC,KAAK,EAAC,SAAS;QAAEC,OAAK,EAAEb,QAAA,CAAAc,YAAY;QAAEZ,KAAK,EAAC;;QALzDV,OAAA,EAAAC,QAAA,CAKwE,MAAS,CALjFsB,gBAAA,CAKwE,WAAS,E;QALjFC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}