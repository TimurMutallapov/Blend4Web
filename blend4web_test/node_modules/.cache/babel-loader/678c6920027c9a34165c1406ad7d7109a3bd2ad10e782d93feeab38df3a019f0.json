{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withCtx as _withCtx } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_slider = _resolveComponent(\"v-slider\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, {\n      fluid: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_file_input, {\n        label: \"Выбрать файл\",\n        onChange: $options.handleFileUpload,\n        class: \"file-input\"\n      }, null, 8 /* PROPS */, [\"onChange\"]), _createCommentVNode(\" Отображение изначально выбранного изображения \"), $data.selectedImage ? (_openBlock(), _createBlock(_component_v_img, {\n        key: 0,\n        src: $data.selectedImage,\n        width: \"300\",\n        height: \"200\",\n        class: \"uploaded-image\"\n      }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Отображение всех полученных изображений \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: 'received-' + index\n        }, [_createVNode(_component_v_img, {\n          src: image,\n          width: \"300\",\n          height: \"200\",\n          class: \"uploaded-image\"\n        }, null, 8 /* PROPS */, [\"src\"])]);\n      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Три слайдера для выбора значений от 0 до 100 \"), (_openBlock(), _createElementBlock(_Fragment, null, _renderList(3, n => {\n        return _createVNode(_component_v_slider, {\n          key: `slider-${n}`,\n          modelValue: $data.sliders[n],\n          \"onUpdate:modelValue\": $event => $data.sliders[n] = $event,\n          label: `Slider ${n}: ${$data.sliders[n]}`,\n          min: \"0\",\n          max: \"100\",\n          \"thumb-label\": \"always\",\n          class: \"my-5\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"label\"]);\n      }), 64 /* STABLE_FRAGMENT */)), _createVNode(_component_v_btn, {\n        color: \"primary\",\n        onClick: $options.applyChanges,\n        class: \"apply-button\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Применить\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_container","fluid","_component_v_file_input","label","onChange","$options","handleFileUpload","class","_createCommentVNode","$data","selectedImage","_component_v_img","key","src","width","height","_createElementBlock","_Fragment","_renderList","images","image","index","n","_component_v_slider","modelValue","sliders","$event","min","max","_component_v_btn","color","onClick","applyChanges","_createTextVNode","_"],"sources":["C:\\Users\\golov\\OneDrive\\Рабочий стол\\projectTest\\blend4web_test\\src\\App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <v-file-input label=\"Выбрать файл\" @change=\"handleFileUpload\" class=\"file-input\"></v-file-input>\n      \n      <!-- Отображение изначально выбранного изображения -->\n      <v-img v-if=\"selectedImage\" :src=\"selectedImage\" width=\"300\" height=\"200\" class=\"uploaded-image\"></v-img>\n      \n      <!-- Отображение всех полученных изображений -->\n      <div v-for=\"(image, index) in images\" :key=\"'received-' + index\">\n        <v-img :src=\"image\" width=\"300\" height=\"200\" class=\"uploaded-image\"></v-img>\n      </div>\n\n      <!-- Три слайдера для выбора значений от 0 до 100 -->\n      <v-slider v-for=\"n in 3\" :key=\"`slider-${n}`\" v-model=\"sliders[n]\" :label=\"`Slider ${n}: ${sliders[n]}`\" min=\"0\" max=\"100\" thumb-label=\"always\" class=\"my-5\"></v-slider>\n      \n      <v-btn color=\"primary\" @click=\"applyChanges\" class=\"apply-button\">Применить</v-btn>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedImage: null,\n      images: [],\n      sliders: { // Добавляем объект для хранения значений слайдеров\n        1: 50, // Начальное значение для каждого слайдера\n        2: 50,\n        3: 50\n      }\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result;\n          this.images = []; // Очистка при выборе нового файла\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    applyChanges() {\n      if (!this.selectedImage) {\n        console.error('Изображение не выбрано');\n        return;\n      }\n\n      const base64Image = this.selectedImage.split(',')[1];\n\n      axios.post('http://127.0.0.1:5000/api/custom_task', {\n        param1: base64Image,\n        param2: '123',\n        sliders: this.sliders // Отправляем значения слайдеров на сервер\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        if (response.data.images && response.data.images.length > 0) {\n          this.images = response.data.images.map(img => `data:image/png;base64,${img}`);\n        } else {\n          console.error('Ответ сервера не содержит изображения');\n        }\n      })\n      .catch(error => {\n        console.error('Ошибка при запросе к серверу:', error);\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.file-input, .my-5 {\n  margin-bottom: 20px;\n}\n\n.uploaded-image {\n  margin-top: 20px;\n}\n\n.apply-button {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";;;;;;;;uBACEA,YAAA,CAiBQC,gBAAA;IAlBVC,OAAA,EAAAC,QAAA,CAEI,MAec,CAfdC,YAAA,CAecC,sBAAA;MAfDC,KAAK,EAAL;IAAK;MAFtBJ,OAAA,EAAAC,QAAA,CAGM,MAAgG,CAAhGC,YAAA,CAAgGG,uBAAA;QAAlFC,KAAK,EAAC,cAAc;QAAEC,QAAM,EAAEC,QAAA,CAAAC,gBAAgB;QAAEC,KAAK,EAAC;6CAEpEC,mBAAA,mDAAsD,EACzCC,KAAA,CAAAC,aAAa,I,cAA1Bf,YAAA,CAAyGgB,gBAAA;QAN/GC,GAAA;QAMmCC,GAAG,EAAEJ,KAAA,CAAAC,aAAa;QAAEI,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACR,KAAK,EAAC;0CANtFC,mBAAA,gBAQMA,mBAAA,6CAAgD,G,kBAChDQ,mBAAA,CAEMC,SAAA,QAXZC,WAAA,CASoCT,KAAA,CAAAU,MAAM,EAT1C,CASmBC,KAAK,EAAEC,KAAK;6BAAzBL,mBAAA,CAEM;UAFiCJ,GAAG,gBAAgBS;YACxDtB,YAAA,CAA4EY,gBAAA;UAApEE,GAAG,EAAEO,KAAK;UAAEN,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC,KAAK;UAACR,KAAK,EAAC;;sCAGrDC,mBAAA,kDAAqD,G,cACrDQ,mBAAA,CAAwKC,SAAA,QAd9KC,WAAA,CAc4B,CAAC,EAANI,CAAC;eAAlBvB,YAAA,CAAwKwB,mBAAA;UAA9IX,GAAG,YAAYU,CAAC;UAdhDE,UAAA,EAc6Df,KAAA,CAAAgB,OAAO,CAACH,CAAC;UAdtE,uBAAAI,MAAA,IAc6DjB,KAAA,CAAAgB,OAAO,CAACH,CAAC,IAAAI,MAAA;UAAIvB,KAAK,YAAYmB,CAAC,KAAKb,KAAA,CAAAgB,OAAO,CAACH,CAAC;UAAKK,GAAG,EAAC,GAAG;UAACC,GAAG,EAAC,KAAK;UAAC,aAAW,EAAC,QAAQ;UAACrB,KAAK,EAAC;;sCAEtJR,YAAA,CAAmF8B,gBAAA;QAA5EC,KAAK,EAAC,SAAS;QAAEC,OAAK,EAAE1B,QAAA,CAAA2B,YAAY;QAAEzB,KAAK,EAAC;;QAhBzDV,OAAA,EAAAC,QAAA,CAgBwE,MAAS,CAhBjFmC,gBAAA,CAgBwE,WAAS,E;QAhBjFC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}