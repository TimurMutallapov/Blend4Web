{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedImage: null\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    applyChanges() {\n      if (!this.selectedImage) {\n        console.error('Изображение не выбрано');\n        return;\n      }\n\n      // Конвертирование изображения в base64\n      const base64Image = this.selectedImage.split(',')[1];\n\n      // POST-запрос на сервер с изображением в теле запроса\n      axios.post('http://127.0.0.1:5000/api/custom_task', {\n        param1: base64Image,\n        param2: '123'\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('Успешный ответ от сервера:', response.data);\n        // Проверяем наличие поля 'images' в ответе сервера и что массив не пуст\n        if (response.data.images && response.data.images.length > 0) {\n          // Если сервер возвращает изображение в формате base64, добавляем префикс для отображения первого изображения\n          this.selectedImage = `data:image/png;base64,${response.data.images[0]}`;\n        } else {\n          console.error('Ответ сервера не содержит изображения');\n        }\n      }).catch(error => {\n        console.error('Ошибка при запросе к серверу:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedImage","methods","handleFileUpload","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","applyChanges","console","error","base64Image","split","post","param1","param2","headers","then","response","log","images","length","catch"],"sources":["C:\\Users\\golov\\OneDrive\\Рабочий стол\\projectTest\\blend4web_test\\src\\App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <v-file-input label=\"Выбрать файл\" @change=\"handleFileUpload\" class=\"file-input\"></v-file-input>\n      <v-img v-if=\"selectedImage\" :src=\"selectedImage\" width=\"300\" height=\"200\" class=\"uploaded-image\"></v-img>\n      <v-btn color=\"primary\" @click=\"applyChanges\" class=\"apply-button\">Применить</v-btn>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedImage: null\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    applyChanges() {\n  if (!this.selectedImage) {\n    console.error('Изображение не выбрано');\n    return;\n  }\n\n  // Конвертирование изображения в base64\n  const base64Image = this.selectedImage.split(',')[1];\n\n  // POST-запрос на сервер с изображением в теле запроса\n  axios.post('http://127.0.0.1:5000/api/custom_task', {\n    param1: base64Image,\n    param2: '123'\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  .then(response => {\n    console.log('Успешный ответ от сервера:', response.data);\n    // Проверяем наличие поля 'images' в ответе сервера и что массив не пуст\n    if (response.data.images && response.data.images.length > 0) {\n      // Если сервер возвращает изображение в формате base64, добавляем префикс для отображения первого изображения\n      this.selectedImage = `data:image/png;base64,${response.data.images[0]}`;\n    } else {\n      console.error('Ответ сервера не содержит изображения');\n    }\n  })\n  .catch(error => {\n    console.error('Ошибка при запросе к серверу:', error);\n  });\n}\n\n  }\n};\n</script>\n\n<style>\n.file-input {\n  margin-bottom: 20px;\n}\n\n.uploaded-image {\n  margin-top: 20px;\n}\n\n.apply-button {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"AAWA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;UACpB,IAAI,CAACT,aAAY,GAAIO,MAAM,CAACG,MAAM;QACpC,CAAC;QACDH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;MAC5B;IACF,CAAC;IACDQ,YAAYA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACZ,aAAa,EAAE;QACvBa,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACvC;MACF;;MAEA;MACA,MAAMC,WAAU,GAAI,IAAI,CAACf,aAAa,CAACgB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEpD;MACAlB,KAAK,CAACmB,IAAI,CAAC,uCAAuC,EAAE;QAClDC,MAAM,EAAEH,WAAW;QACnBI,MAAM,EAAE;MACV,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;QAChBT,OAAO,CAACU,GAAG,CAAC,4BAA4B,EAAED,QAAQ,CAACvB,IAAI,CAAC;QACxD;QACA,IAAIuB,QAAQ,CAACvB,IAAI,CAACyB,MAAK,IAAKF,QAAQ,CAACvB,IAAI,CAACyB,MAAM,CAACC,MAAK,GAAI,CAAC,EAAE;UAC3D;UACA,IAAI,CAACzB,aAAY,GAAK,yBAAwBsB,QAAQ,CAACvB,IAAI,CAACyB,MAAM,CAAC,CAAC,CAAE,EAAC;QACzE,OAAO;UACLX,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAC;QACxD;MACF,CAAC,EACAY,KAAK,CAACZ,KAAI,IAAK;QACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACJ;EAEE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}