{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedImage: null,\n      images: [],\n      samplingSteps: 20,\n      cfgScale: 10,\n      denoisingStrength: 0.30,\n      imageDialog: false,\n      currentImage: '',\n      imageScale: 1,\n      isLoading: false // Добавлено для индикатора загрузки\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file && file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result;\n          this.images = []; // Очистка при выборе нового файла\n        };\n        reader.readAsDataURL(file);\n      } else {\n        alert('Пожалуйста, выберите изображение.');\n      }\n    },\n    applyChanges() {\n      if (!this.selectedImage) {\n        alert('Изображение не выбрано');\n        return;\n      }\n      this.isLoading = true; // Активация индикатора загрузки\n      const base64Image = this.selectedImage.split(',')[1];\n      axios.post('http://127.0.0.1:5000/api/custom_task', {\n        param1: base64Image,\n        param2: this.samplingSteps.toString(),\n        param3: this.cfgScale.toString(),\n        param4: this.denoisingStrength.toString()\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        this.isLoading = false; // Деактивация индикатора загрузки\n        if (response.data.images && response.data.images.length > 0) {\n          this.images = response.data.images.map(img => `data:image/png;base64,${img}`);\n        } else {\n          console.error('Ответ сервера не содержит изображения');\n        }\n      }).catch(error => {\n        this.isLoading = false; // Деактивация индикатора загрузки при ошибке\n        console.error('Ошибка при запросе к серверу:', error);\n      });\n    },\n    openImage(imageSrc) {\n      this.currentImage = imageSrc;\n      this.imageDialog = true;\n      this.imageScale = 1; // Сброс масштаба при открытии нового изображения\n    },\n    closeImage() {\n      this.imageDialog = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedImage","images","samplingSteps","cfgScale","denoisingStrength","imageDialog","currentImage","imageScale","isLoading","methods","handleFileUpload","event","file","target","files","type","startsWith","reader","FileReader","onload","result","readAsDataURL","alert","applyChanges","base64Image","split","post","param1","param2","toString","param3","param4","headers","then","response","length","map","img","console","error","catch","openImage","imageSrc","closeImage"],"sources":["C:\\Users\\golov\\OneDrive\\Рабочий стол\\projectTest\\blend4web_test\\src\\App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <v-file-input label=\"Выбрать файл\" @change=\"handleFileUpload\" class=\"file-input\" accept=\"image/*\"></v-file-input>\n      <v-progress-linear v-if=\"isLoading\" color=\"blue\" indeterminate></v-progress-linear>\n      <v-img v-if=\"selectedImage\" :src=\"selectedImage\" width=\"300\" height=\"200\" class=\"uploaded-image\"></v-img>\n      <v-slider v-model=\"samplingSteps\" :label=\"`Sampling Steps: ${samplingSteps}`\" min=\"1\" max=\"100\" step=\"1\" thumb-label=\"always\" class=\"my-5\"></v-slider>\n      <v-slider v-model=\"cfgScale\" :label=\"`CFG Scale: ${cfgScale}`\" min=\"1\" max=\"30\" step=\"1\" thumb-label=\"always\" class=\"my-5\"></v-slider>\n      <v-slider v-model=\"denoisingStrength\" :label=\"`Denoising Strength: ${denoisingStrength}`\" min=\"0\" max=\"1\" step=\"0.01\" thumb-label=\"always\" class=\"my-5\"></v-slider>\n      <v-btn color=\"primary\" @click=\"applyChanges\" class=\"apply-button\">Применить</v-btn>\n      <div v-if=\"images.length\" class=\"results-section\">\n        <v-subheader>Результат</v-subheader>\n        <v-row>\n          <v-col v-for=\"(image, index) in images\" :key=\"'received-' + index\" cols=\"12\" sm=\"4\" md=\"3\">\n            <v-img :src=\"image\" height=\"200\" class=\"result-image\" @click=\"openImage(image)\"></v-img>\n            <div class=\"d-flex justify-center mt-2\">\n              <v-btn small color=\"primary\" :href=\"image\" :download=\"'image' + index + '.png'\">Скачать</v-btn>\n            </div>\n          </v-col>\n        </v-row>\n      </div>\n    </v-container>\n    <v-dialog v-model=\"imageDialog\" persistent max-width=\"600px\">\n      <v-card>\n        <v-toolbar dense flat>\n          <v-spacer></v-spacer>\n          <v-btn icon @click=\"closeImage\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-slider\n          v-model=\"imageScale\"\n          :min=\"1\"\n          :max=\"3\"\n          step=\"0.1\"\n          thumb-label=\"always\"\n          class=\"mx-4\"\n          label=\"Масштаб изображения\"\n        ></v-slider>\n        <v-img :src=\"currentImage\" class=\"view-image\" :style=\"{ transform: `scale(${imageScale})` }\"></v-img>\n      </v-card>\n    </v-dialog>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedImage: null,\n      images: [],\n      samplingSteps: 20,\n      cfgScale: 10,\n      denoisingStrength: 0.30,\n      imageDialog: false,\n      currentImage: '',\n      imageScale: 1,\n      isLoading: false, // Добавлено для индикатора загрузки\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file && file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.selectedImage = reader.result;\n          this.images = []; // Очистка при выборе нового файла\n        };\n        reader.readAsDataURL(file);\n      } else {\n        alert('Пожалуйста, выберите изображение.');\n      }\n    },\n    applyChanges() {\n      if (!this.selectedImage) {\n        alert('Изображение не выбрано');\n        return;\n      }\n      this.isLoading = true; // Активация индикатора загрузки\n      const base64Image = this.selectedImage.split(',')[1];\n      axios.post('http://127.0.0.1:5000/api/custom_task', {\n        param1: base64Image,\n        param2: this.samplingSteps.toString(),\n        param3: this.cfgScale.toString(),\n        param4: this.denoisingStrength.toString(),\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        this.isLoading = false; // Деактивация индикатора загрузки\n        if (response.data.images && response.data.images.length > 0) {\n          this.images = response.data.images.map(img => `data:image/png;base64,${img}`);\n        } else {\n          console.error('Ответ сервера не содержит изображения');\n        }\n      })\n      .catch(error => {\n        this.isLoading = false; // Деактивация индикатора загрузки при ошибке\n        console.error('Ошибка при запросе к серверу:', error);\n      });\n    },\n    openImage(imageSrc) {\n      this.currentImage = imageSrc;\n      this.imageDialog = true;\n      this.imageScale = 1; // Сброс масштаба при открытии нового изображения\n    },\n    closeImage() {\n      this.imageDialog = false;\n    }\n  }\n};\n</script>\n\n<style>\n/* Обновленные стили */\n.v-app {\n  font-family: 'Roboto', sans-serif;\n  color: #333;\n}\n\n.file-input, .my-5, .apply-button, .results-section {\n  margin-bottom: 30px;\n}\n\n.uploaded-image, .result-image {\n  margin-top: 30px;\n  border-radius: 8px;\n}\n\n.apply-button {\n  background-color: #4CAF50; /* Зеленая */\n  color: white;\n}\n\n.results-section .v-subheader {\n  color: #333;\n  font-weight: 600;\n}\n\n.v-btn {\n  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n  transition: background-color 0.3s ease;\n}\n\n.v-btn:hover {\n  background-color: #45a049; /* Темно-зеленая */\n}\n\n.result-image:hover {\n  cursor: pointer;\n  transform: scale(1.03);\n  box-shadow: 0 8px 16px rgba(0,0,0,0.2);\n}\n\n/* Дополнительные стили для улучшения адаптивности и визуального оформления */\n</style>\n"],"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,EAAE;MACZC,iBAAiB,EAAE,IAAI;MACvBC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE,KAAK,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAG,IAAKA,IAAI,CAACG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;QAC1C,MAAMC,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;UACpB,IAAI,CAACnB,aAAY,GAAIiB,MAAM,CAACG,MAAM;UAClC,IAAI,CAACnB,MAAK,GAAI,EAAE,EAAE;QACpB,CAAC;QACDgB,MAAM,CAACI,aAAa,CAACT,IAAI,CAAC;MAC5B,OAAO;QACLU,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACvB,aAAa,EAAE;QACvBsB,KAAK,CAAC,wBAAwB,CAAC;QAC/B;MACF;MACA,IAAI,CAACd,SAAQ,GAAI,IAAI,EAAE;MACvB,MAAMgB,WAAU,GAAI,IAAI,CAACxB,aAAa,CAACyB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD3B,KAAK,CAAC4B,IAAI,CAAC,uCAAuC,EAAE;QAClDC,MAAM,EAAEH,WAAW;QACnBI,MAAM,EAAE,IAAI,CAAC1B,aAAa,CAAC2B,QAAQ,CAAC,CAAC;QACrCC,MAAM,EAAE,IAAI,CAAC3B,QAAQ,CAAC0B,QAAQ,CAAC,CAAC;QAChCE,MAAM,EAAE,IAAI,CAAC3B,iBAAiB,CAACyB,QAAQ,CAAC;MAC1C,CAAC,EAAE;QACDG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAAC1B,SAAQ,GAAI,KAAK,EAAE;QACxB,IAAI0B,QAAQ,CAACnC,IAAI,CAACE,MAAK,IAAKiC,QAAQ,CAACnC,IAAI,CAACE,MAAM,CAACkC,MAAK,GAAI,CAAC,EAAE;UAC3D,IAAI,CAAClC,MAAK,GAAIiC,QAAQ,CAACnC,IAAI,CAACE,MAAM,CAACmC,GAAG,CAACC,GAAE,IAAM,yBAAwBA,GAAI,EAAC,CAAC;QAC/E,OAAO;UACLC,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAC;QACxD;MACF,CAAC,EACAC,KAAK,CAACD,KAAI,IAAK;QACd,IAAI,CAAC/B,SAAQ,GAAI,KAAK,EAAE;QACxB8B,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACJ,CAAC;IACDE,SAASA,CAACC,QAAQ,EAAE;MAClB,IAAI,CAACpC,YAAW,GAAIoC,QAAQ;MAC5B,IAAI,CAACrC,WAAU,GAAI,IAAI;MACvB,IAAI,CAACE,UAAS,GAAI,CAAC,EAAE;IACvB,CAAC;IACDoC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACtC,WAAU,GAAI,KAAK;IAC1B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}